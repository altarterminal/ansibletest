- name: install terraform main process
  hosts: all
  gather_facts: no
  become: yes
  environment:
    http_proxy:  "{{ proxy_setting }}"
    https_proxy: "{{ proxy_setting }}"
  vars:
    gpg_url: "https://apt.releases.hashicorp.com/gpg"
    gpg_path: "/etc/apt/keyrings/hashicorp.gpg"
    download_url: "https://apt.releases.hashicorp.com"
    list_path: "/etc/apt/sources.list.d/hashicorp.list"
  tasks:
    - name: gather date and time
      ansible.builtin.setup:
        gather_subset:
          - "date_time"
      when: ansible_date_time is not defined

    - name: set variable
      ansible.builtin.set_fact:
        tmp_path: "/tmp/tmp_gpg_{{ ansible_date_time.date }}"

    - name: download gpg
      ansible.builtin.get_url:
        url: "{{ gpg_url }}"
        dest: "{{ tmp_path }}"
        use_proxy: "{{ 'true' if proxy_setting != '' else 'false' }}"

    - name: prepare gpg directory
      ansible.builtin.file:
        path: "{{ gpg_path | dirname }}"
        owner: root
        group: root
        mode: "0755"
        state: directory

    - name: delete old gpg (cannot skip this)
      ansible.builtin.file:
        path: "{{ gpg_path }}"
        state: absent

    - name: register external repository
      ansible.builtin.shell: |
        gpg --dearmor -o "{{ gpg_path }}" < "{{ tmp_path }}"
        gpg --no-default-keyring --keyring "{{ gpg_path }}" --fingerprint
        printf 'deb [arch=%s signed-by=%s] %s %s main'     \
          "$(dpkg --print-architecture)" "{{ gpg_path }}"  \
          "{{ download_url }}" "$(lsb_release -cs)"        |
        tee "{{ list_path }}" >/dev/null

    - name: delete tmp gpg
      ansible.builtin.file:
        path: "{{ tmp_path }}"
        state: absent

    - name: install
      ansible.builtin.apt:
        update_cache: yes
        name:
          - terraform
