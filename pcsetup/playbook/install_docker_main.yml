- name: install docker main process
  hosts: all
  gather_facts: no
  become: yes
  environment:
    http_proxy:  "{{ proxy_setting }}"
    https_proxy: "{{ proxy_setting }}"
  vars:
    gpg_url: "https://download.docker.com/linux/ubuntu/gpg"
    gpg_path: "/etc/apt/keyrings/docker.gpg"
    download_url: "https://download.docker.com/linux/ubuntu"
    list_path: "/etc/apt/sources.list.d/docker.list"
    docker_ver: "5:25.0.5-1~ubuntu.22.04~jammy"
  tasks:
    - name: make temp file
      ansible.builtin.tempfile:
      register: temp_gpg

    - name: download tmp gpg
      ansible.builtin.get_url:
        url: "{{ gpg_url }}"
        dest: "{{ temp_gpg.path }}"
        force: true
        use_proxy: "{{ proxy_setting != '' }}"

    - name: prepare gpg directory
      ansible.builtin.file:
        path: "{{ gpg_path | dirname }}"
        owner: root
        group: root
        mode: "0755"
        state: directory

    - name: delete old gpg (cannot skip this)
      ansible.builtin.file:
        path: "{{ gpg_path }}"
        state: absent

    - name: register external repository
      ansible.builtin.shell: |
        gpg --dearmor -o "{{ gpg_path }}" "{{ temp_gpg.path }}"
        printf 'deb [arch=%s signed-by=%s] %s %s stable\n' \
          "$(dpkg --print-architecture)" "{{ gpg_path }}"  \
          "{{ download_url }}" "$(lsb_release -cs)"        \
          >"{{ list_path }}"

    - name: delete tmp gpg
      ansible.builtin.file:
        path: "{{ temp_gpg.path }}"
        state: absent

    - name: install the specific version
      ansible.builtin.apt:
        update_cache: yes
        name:
          - docker-ce-cli={{ docker_ver }}
          - docker-ce={{ docker_ver }}

    - name: hold the version
      ansible.builtin.shell: apt-mark hold docker-ce-cli docker-ce
