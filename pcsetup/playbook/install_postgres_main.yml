- name: Install postgres main process
  hosts: all
  gather_facts: false
  become: true
  environment:
    http_proxy: "{{ proxy_setting }}"
    https_proxy: "{{ proxy_setting }}"
  vars:
    gpg_url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
    gpg_path: "/etc/apt/keyrings/pgdg.gpg"
    download_url: "http://apt.postgresql.org/pub/repos/apt"
    list_path: "/etc/apt/sources.list.d/pgdg.list"
  tasks:
    - name: Make temp file
      ansible.builtin.tempfile:
      register: temp_gpg

    - name: Download temp gpg
      ansible.builtin.get_url:
        url: "{{ gpg_url }}"
        dest: "{{ temp_gpg.path }}"
        force: true
        owner: root
        group: root
        mode: "0644"
        use_proxy: "{{ proxy_setting != '' }}"

    - name: Prepare gpg directory
      ansible.builtin.file:
        path: "{{ gpg_path | dirname }}"
        owner: root
        group: root
        mode: "0755"
        state: directory

    - name: Delete old gpg (cannot skip this)
      ansible.builtin.file:
        path: "{{ gpg_path }}"
        state: absent

    - name: Register external repository
      ansible.builtin.shell: |
        gpg --dearmor -o "{{ gpg_path }}" "{{ temp_gpg.path }}"
        printf 'deb [signed-by=%s] %s %s-pgdg main\n'                \
          "{{ gpg_path }}" "{{ download_url }}" "$(lsb_release -cs)" \
          >"{{ list_path }}"

    - name: Delete temp gpg
      ansible.builtin.file:
        path: "{{ temp_gpg.path }}"
        state: absent

    - name: Install
      ansible.builtin.apt:
        update_cache: true
        name:
          - postgresql
          - postgresql-contrib
